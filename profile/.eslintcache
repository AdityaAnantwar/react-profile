[{"C:\\Users\\Aditya\\dev\\REACT\\profile\\src\\index.js":"1","C:\\Users\\Aditya\\dev\\REACT\\profile\\src\\App.js":"2","C:\\Users\\Aditya\\dev\\REACT\\profile\\src\\reportWebVitals.js":"3","C:\\Users\\Aditya\\dev\\REACT\\profile\\src\\slider1.js":"4"},{"size":7433,"mtime":1607688905230,"results":"5","hashOfConfig":"6"},{"size":528,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":1674,"mtime":1607510293175,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"x8d960",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},"C:\\Users\\Aditya\\dev\\REACT\\profile\\src\\index.js",["20","21","22","23","24","25","26","27","28","29","30"],"C:\\Users\\Aditya\\dev\\REACT\\profile\\src\\App.js",[],["31","32"],"C:\\Users\\Aditya\\dev\\REACT\\profile\\src\\reportWebVitals.js",[],"C:\\Users\\Aditya\\dev\\REACT\\profile\\src\\slider1.js",["33","34","35","36"],"import React, { Component } from 'react';\r\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\r\nimport './slider.css';\r\n \r\n// list of items\r\nconst list = [\r\n  { name: <img src=\"./me.jpg\" className=\"sliderImg\" /> },\r\n  { name: <img src=\"./me.jpg\" className=\"sliderImg\" /> },\r\n];\r\n \r\n// One item component\r\n// selected prop will be passed\r\nconst MenuItem = ({text, selected}) => {\r\n  return <div\r\n    className={`menu-item ${selected ? 'active' : ''}`}\r\n    >{text}</div>;\r\n};\r\n \r\n// All items component\r\n// Important! add unique key\r\nexport const Menu = (list, selected) =>\r\n  list.map(el => {\r\n    const {name} = el;\r\n \r\n    return <MenuItem text={name} key={name} selected={selected} />;\r\n  });\r\n \r\n \r\nconst Arrow = ({ text, className }) => {\r\n  return (\r\n    <div\r\n      className={className}\r\n    >{text}</div>\r\n  );\r\n};\r\n \r\n \r\nconst ArrowLeft = Arrow({ text: '<', className: 'arrow-prev' });\r\nconst ArrowRight = Arrow({ text: '>', className: 'arrow-next' });\r\n \r\nconst selected = 'item1';\r\n \r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // call it again if items count changes\r\n    this.menuItems = Menu(list, selected);\r\n  }\r\n \r\n  state = {\r\n    selected\r\n  };\r\n \r\n  onSelect = key => {\r\n    this.setState({ selected: key });\r\n  }\r\n \r\n \r\n  render() {\r\n    const { selected } = this.state;\r\n    // Create menu from items\r\n    const menu = this.menuItems;\r\n \r\n    return (\r\n      <div className=\"App\">\r\n        <ScrollMenu\r\n          data={menu}\r\n          selected={selected}\r\n          onSelect={this.onSelect}\r\n        alignCenter={true}\r\n        alignOnResize={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n",{"ruleId":"37","severity":1,"message":"38","line":4,"column":8,"nodeType":"39","messageId":"40","endLine":4,"endColumn":11},{"ruleId":"37","severity":1,"message":"41","line":6,"column":10,"nodeType":"39","messageId":"40","endLine":6,"endColumn":16},{"ruleId":"37","severity":1,"message":"42","line":9,"column":26,"nodeType":"39","messageId":"40","endLine":9,"endColumn":37},{"ruleId":"37","severity":1,"message":"43","line":9,"column":54,"nodeType":"39","messageId":"40","endLine":9,"endColumn":60},{"ruleId":"37","severity":1,"message":"44","line":9,"column":62,"nodeType":"39","messageId":"40","endLine":9,"endColumn":66},{"ruleId":"37","severity":1,"message":"45","line":10,"column":10,"nodeType":"39","messageId":"40","endLine":10,"endColumn":24},{"ruleId":"37","severity":1,"message":"46","line":57,"column":9,"nodeType":"39","messageId":"40","endLine":57,"endColumn":16},{"ruleId":"37","severity":1,"message":"46","line":128,"column":9,"nodeType":"39","messageId":"40","endLine":128,"endColumn":16},{"ruleId":"37","severity":1,"message":"46","line":139,"column":9,"nodeType":"39","messageId":"40","endLine":139,"endColumn":16},{"ruleId":"37","severity":1,"message":"46","line":149,"column":9,"nodeType":"39","messageId":"40","endLine":149,"endColumn":16},{"ruleId":"47","severity":1,"message":"48","line":201,"column":9,"nodeType":"49","endLine":201,"endColumn":67},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"47","severity":1,"message":"48","line":7,"column":11,"nodeType":"49","endLine":7,"endColumn":55},{"ruleId":"47","severity":1,"message":"48","line":8,"column":11,"nodeType":"49","endLine":8,"endColumn":55},{"ruleId":"37","severity":1,"message":"54","line":38,"column":7,"nodeType":"39","messageId":"40","endLine":38,"endColumn":16},{"ruleId":"37","severity":1,"message":"55","line":39,"column":7,"nodeType":"39","messageId":"40","endLine":39,"endColumn":17},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","'CssBaseline' is defined but never used.","'Hidden' is defined but never used.","'Icon' is defined but never used.","'createMuiTheme' is defined but never used.","'classes' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["56"],"no-negated-in-lhs",["57"],"'ArrowLeft' is assigned a value but never used.","'ArrowRight' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]